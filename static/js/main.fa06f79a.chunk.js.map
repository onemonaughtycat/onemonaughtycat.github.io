{"version":3,"sources":["Menu.js","pages/Hello.js","pages/Fox.js","pages/Mineswepper/Icons.js","pages/Mineswepper/Square.js","pages/Mineswepper/Board.js","pages/Mineswepper/Logic.js","pages/Mineswepper/Game.js","pages/index.js","pages/Mineswepper/index.js","Page.js","App.js","index.js"],"names":["Menu","props","state","selected","handleClick","bind","e","i","target","parentNode","children","length","this","setState","onItemClick","outerText","ids","map","id","className","onClick","React","Component","Hello","Fox","Icons","bomb","mark","helper","exploded","Square","handleContextMenu","preventDefault","handleMouseDown","_buttons","buttons","handleMouseUp","onLeftClick","onRightClick","onBothClick","value","isOpened","push","withBomb","nearBombsCount","isMarked","isHelper","join","onContextMenu","onMouseDown","onMouseUp","Board","handleLeftClick","square","handleRightClick","handleBothClick","data","row","y","x","Logic","width","height","bombsCount","bombs","isBomb","filter","Math","floor","random","nearBombs","count","dy","dx","Array","fill","_","filtered","cell","Boolean","boardState","currSquare","newBoardState","sqr","newCurrSquare","openSquareRec","forEach","alert","isBombsNear","doWithNearSquares","console","log","callback","Game","board","openSquare","setMark","tryOpenNearSquares","initBoard","logBoard","pages","Object","keys","Page","SomePage","App","handleMenuItemClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kTAGqBA,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,CAAEC,UAAW,GAE1B,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBALF,E,+CAQnB,SAAYC,GACV,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAEE,OAAOC,WAAWC,SAASC,OAAQJ,IACnDD,EAAEE,SAAWF,EAAEE,OAAOC,WAAWC,SAASH,IAC5CK,KAAKC,SAAS,CAAEV,SAAUI,IAE9BK,KAAKX,MAAMa,YAAYR,EAAEE,OAAOO,a,oBAGlC,WAAU,IAAD,OACDC,EAAMJ,KAAKX,MAAMe,IAAIC,KAAI,SAACC,EAAIX,GAClC,IAAIY,EAAY,mBAKhB,OAHIZ,IAAM,EAAKL,MAAMC,WACnBgB,GAAa,aAER,oBAAYA,UAAWA,EAAWC,QAAS,EAAKhB,YAAhD,SAA8Dc,GAArDX,MAGlB,OACE,qBAAKY,UAAU,sBAAf,SACE,oBAAIA,UAAU,wBAAd,SAAuCH,U,GA7BbK,IAAMC,WCDnBC,E,4JACnB,WACE,OAAO,mD,GAFwBF,IAAMC,WCApBE,E,4JACnB,WACE,OAAO,uF,GAFsBH,IAAMC,WCKxBG,EAPD,CACZC,KAAM,eACNC,KAAM,SACNC,OAAQ,SACRC,SAAU,gBCCSC,G,kNACnBC,kBAAoB,SAAAzB,GAClBA,EAAE0B,kB,EASJC,gBAAkB,SAAA3B,GAChB,EAAK4B,SAAW5B,EAAE6B,S,EAGpBC,cAAgB,SAAA9B,GACd,GAAK,EAAK4B,SAAV,CAEA,OAAQ,EAAKA,UACX,KAAK,EACH,EAAKjC,MAAMoC,YAAY,EAAKpC,OAC5B,MACF,KAAK,EACH,EAAKA,MAAMqC,aAAa,EAAKrC,OAC7B,MACF,KAAK,EACH,EAAKA,MAAMsC,YAAY,EAAKtC,OAMhC,EAAKiC,SAAW,O,4CAGlB,WACE,IAAMf,EAAY,CAAC,UACfqB,EAAQ,GAoBZ,OAlBI5B,KAAKX,MAAMwC,UACbtB,EAAUuB,KAAK,UAEX9B,KAAKX,MAAM0C,WACbH,EAAQf,EAAMC,MAEZd,KAAKX,MAAM2C,iBACbJ,EAAQ5B,KAAKX,MAAM2C,eACnBzB,EAAUuB,KAAK,aAGb9B,KAAKX,MAAM4C,WACbL,EAAQf,EAAME,MAEZf,KAAKX,MAAM6C,WACbN,EAAQf,EAAMG,SAIhB,qBACET,UAAWA,EAAU4B,KAAK,KAC1BC,cAAepC,KAAKmB,kBACpBkB,YAAarC,KAAKqB,gBAClBiB,UAAWtC,KAAKwB,cAJlB,SAMGI,Q,GAhE2BnB,IAAMC,YCArB6B,G,kNACnBC,gBAAkB,SAAAC,GAChB,EAAKpD,MAAMoC,YAAYgB,I,EAGzBC,iBAAmB,SAAAD,GACjB,EAAKpD,MAAMqC,aAAae,I,EAG1BE,gBAAkB,SAAAF,GAChB,EAAKpD,MAAMsC,YAAYc,I,4CAGzB,WAAU,IAAD,OACP,OACE,qBAAKlC,UAAU,QAAf,SACGP,KAAKX,MAAMuD,KAAKvC,KAAI,SAACwC,EAAKC,GAAN,OACnB,8BACGD,EAAIxC,KAAI,SAACoC,EAAQM,GAAT,OACP,cAAC,EAAD,CAEEA,EAAGN,EAAOM,EACVD,EAAGL,EAAOK,EACVf,SAAUU,EAAOV,SACjBC,eAAgBS,EAAOT,eACvBH,SAAUY,EAAOZ,SACjBI,SAAUQ,EAAOR,SACjBC,SAAUO,EAAOP,SACjBT,YAAa,EAAKe,gBAClBd,aAAc,EAAKgB,iBACnBf,YAAa,EAAKgB,iBAVbI,OAHDD,Y,GAjBerC,IAAMC,Y,OCSpBsC,E,8FAQnB,SAAiBC,EAAOC,EAAQC,GAM9B,IAHA,IAAMC,EAAQ,GACRC,EAAS,SAACN,EAAGD,GAAJ,OAAUM,EAAME,QAAO,SAAAxC,GAAI,OAAIA,EAAKiC,IAAMA,GAAKjC,EAAKgC,IAAMA,KAAG/C,QAEnEJ,EAAI,EAAGA,EAAIwD,EAAYxD,IAAK,CACnC,IAAMoD,EAAIQ,KAAKC,MAAMD,KAAKE,SAAWR,GAC/BH,EAAIS,KAAKC,MAAMD,KAAKE,SAAWP,GAEjCG,EAAON,EAAGD,GACZnD,IAEAyD,EAAMtB,KAAK,CAAEiB,IAAGD,MAOpB,IAFA,IAAMY,EAAY,GAETZ,EAAI,EAAGA,EAAII,EAAQJ,IAC1B,IAAK,IAAIC,EAAI,EAAGA,EAAIE,EAAOF,IACzB,IAAIM,EAAON,EAAGD,GAAd,CAIA,IAFA,IAAIa,EAAQ,EAEHC,GAAM,EAAGA,GAAM,EAAGA,IACzB,IAAK,IAAIC,GAAM,EAAGA,GAAM,EAAGA,IACrBR,EAAON,EAAIc,EAAIf,EAAIc,IACrBD,IAEFA,GACFD,EAAU5B,KAAK,CAAEiB,IAAGD,IAAGa,UAM7B,OAAOG,MAAMZ,GAAQa,OAClB1D,KAAI,SAAC2D,EAAGlB,GAAJ,OAAUgB,MAAMb,GAAOc,OACzB1D,KAAI,SAAC2D,EAAGjB,GACP,IAAMkB,EAAWP,EAAUJ,QAAO,SAAAY,GAAI,OAAIA,EAAKnB,IAAMA,GAAKmB,EAAKpB,IAAMA,KAErE,MAAO,CACLC,IAAGD,IACHf,SAAUoC,QAAQd,EAAON,EAAGD,IAC5Bd,eAAgBiC,EAASlE,OAASkE,EAAS,GAAGN,MAAQ,EACtD9B,UAAU,EACVI,UAAU,EACVC,UAAU,W,wBAYpB,SAAkBkC,EAAYC,GAC5B,IAAMC,EAAgBF,EAAW/D,KAAI,SAAAwC,GAAG,OAAIA,EAAIxC,KAAI,SAAAkE,GAAG,OAAIA,QACrDC,EAAgBF,EAAcD,EAAWvB,GAAGuB,EAAWtB,GAS7D,OAPA0B,EAAcH,EAAeE,GAEzBA,EAAc3C,UAAY2C,EAAczC,WAC1CuC,EAAcI,SAAQ,SAAA7B,GAAG,OAAIA,EAAI6B,SAAQ,SAAAjC,GAAM,OAAIA,EAAOZ,UAAW,QACrE8C,MAAM,mEAGDL,I,qBAST,SAAeF,EAAYC,GACzB,OAAIA,EAAWxC,SACNuC,EAEFA,EAAW/D,KAAI,SAAAwC,GAAG,OACvBA,EAAIxC,KAAI,SAAAoC,GACN,OAAMA,EAAOM,IAAMsB,EAAWtB,GAAKN,EAAOK,IAAMuB,EAAWvB,IAGtDL,EAAOR,UAAaQ,EAAOP,SAEvBO,EAAOR,WAAaQ,EAAOP,SAClCO,EAAM,2BAAQA,GAAR,IAAgBR,UAAU,EAAOC,UAAU,KACzCO,EAAOR,UAAYQ,EAAOP,WAClCO,EAAM,2BAAQA,GAAR,IAAgBP,UAAU,KAJhCO,EAAM,2BAAQA,GAAR,IAAgBR,UAAU,KAHzBQ,U,gCAoBf,SAA0B2B,EAAYC,GACpC,IAAIO,GAAc,EAWlB,GATAC,EAAkBT,EAAYC,GAAY,SAAA5B,GACpCmC,GAEAnC,EAAOZ,UAAYY,EAAOR,UAE1BQ,EAAOV,WACT6C,GAAc,MAGdA,EACF,OAAOR,EAET,IAAME,EAAgBF,EAAW/D,KAAI,SAAAwC,GAAG,OAAIA,EAAIxC,KAAI,SAAAkE,GAAG,OAAIA,QAQ3D,OANAM,EAAkBP,EAAeD,GAAY,SAAA5B,GACvCA,EAAOZ,UAAYY,EAAOR,WAE9BQ,EAAOZ,UAAW,MAGbyC,I,sBAOT,SAAgBF,GACdU,QAAQC,IACNX,EAAW/D,KAAI,SAAAwC,GAAG,OAChBA,EAAIxC,KAAI,SAAAoC,GAAM,OACZA,EAAOV,SAAW,IAAMU,EAAOT,eAAiBS,EAAOT,eAAiB,GAAK,e,KAYvF,SAASyC,EAAcL,EAAYC,GAC7BA,EAAWxC,UAAYwC,EAAWpC,WAGtCoC,EAAWxC,UAAW,EAElBwC,EAAWtC,UAAYsC,EAAWrC,gBAGtC6C,EAAkBT,EAAYC,GAAY,SAAA5B,GAAM,OAAIgC,EAAcL,EAAY3B,OAchF,SAASoC,EAAkBT,EAAYC,EAAYW,GAIjD,IAHA,IAAMjC,EAAIsB,EAAWtB,EACfD,EAAIuB,EAAWvB,EAEZc,GAAM,EAAGA,GAAM,EAAGA,IACzB,IAAK,IAAIC,GAAM,EAAGA,GAAM,EAAGA,IACzB,GAAMO,EAAWtB,EAAIc,IAAOQ,EAAWtB,EAAIc,GAAIb,EAAIc,GAAnD,CAEA,IAAMpB,EAAS2B,EAAWtB,EAAIc,GAAIb,EAAIc,GAEjCpB,IACDA,EAAOM,IAAMA,GAAKN,EAAOK,IAAMA,GAEnCkC,EAASvC,K,UC7MMwC,E,kDACnB,WAAY5F,GAAQ,IAAD,8BACjB,cAAMA,IASRmD,gBAAkB,SAAAC,GAChB,EAAKxC,SAAS,CACZiF,MAAOlC,EAAMmC,WAAW,EAAK7F,MAAM4F,MAAOzC,MAZ3B,EAgBnBC,iBAAmB,SAAAD,GACjB,EAAKxC,SAAS,CACZiF,MAAOlC,EAAMoC,QAAQ,EAAK9F,MAAM4F,MAAOzC,MAlBxB,EAsBnBE,gBAAkB,SAAAF,GAChB,EAAKxC,SAAS,CACZiF,MAAOlC,EAAMqC,mBAAmB,EAAK/F,MAAM4F,MAAOzC,MArBpD,EAAKnD,MAAQ,CACX4F,MAAOlC,EAAMsC,WAAW,EAAKjG,MAAM4D,OAAQ,EAAK5D,MAAM6D,QAAS,EAAK7D,MAAM8D,aAG5EH,EAAMuC,SAAS,EAAKjG,MAAM4F,OAPT,E,0CA4BnB,WACE,OACE,qBAAK3E,UAAU,YAAf,SACE,cAAC,EAAD,CACEqC,KAAM5C,KAAKV,MAAM4F,MACjBzD,YAAazB,KAAKwC,gBAClBd,aAAc1B,KAAK0C,iBACnBf,YAAa3B,KAAK2C,wB,GApCMlC,IAAMC,WCHlC8E,EAAQ,CACZ,MAAS7E,EACT,IAAOC,EACP,Y,4JCHA,WACE,OAAO,cAAC,EAAD,CAAMqC,MAAM,IAAIC,OAAO,IAAIC,WAAW,W,GAFR1C,IAAMC,YDOzCN,EAAMqF,OAAOC,KAAKF,GEPHG,E,4JACnB,WACE,IAAMC,EAAWJ,EAAMxF,KAAKX,MAAMiB,IAElC,OAAKsF,EAGE,cAACA,EAAD,IAFE,S,GALqBnF,IAAMC,WCEnBmF,E,kDACnB,WAAYxG,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,CAAEgB,GAAI,IAEnB,EAAKwF,oBAAsB,EAAKA,oBAAoBrG,KAAzB,gBALV,E,uDAQnB,SAAoBa,GACdN,KAAKV,MAAMgB,KAAOA,GACpBN,KAAKC,SAAS,CAAEK,S,oBAGpB,WACE,IAAMA,EAAKN,KAAKV,MAAMgB,GAEtB,OACE,gCACE,cAAC,EAAD,CAAMF,IAAKA,EAAKF,YAAaF,KAAK8F,sBAClC,cAAC,EAAD,CAAMxF,GAAIA,W,GApBeG,IAAMC,WCAvCqF,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.fa06f79a.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Menu.css';\r\n\r\nexport default class Menu extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { selected: -1 };\r\n\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleClick(e) {\r\n    for (let i = 0; i < e.target.parentNode.children.length; i++)\r\n      if (e.target === e.target.parentNode.children[i])\r\n        this.setState({ selected: i });\r\n\r\n    this.props.onItemClick(e.target.outerText);\r\n  }\r\n\r\n  render() {\r\n    const ids = this.props.ids.map((id, i) => {\r\n      let className = 'system-menu-item';\r\n\r\n      if (i === this.state.selected)\r\n        className += ' selected';\r\n\r\n      return <li key={i} className={className} onClick={this.handleClick}>{id}</li>\r\n    });\r\n\r\n    return (\r\n      <div className=\"system-menu-wrapper\">\r\n        <ul className=\"system-menu-container\">{ids}</ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nexport default class Hello extends React.Component {\r\n  render() {\r\n    return <h1>Hello, world!</h1>;\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nexport default class Fox extends React.Component {\r\n  render() {\r\n    return <blockquote>The quick brown fox jump over a lazy dog.</blockquote>;\r\n  }\r\n}\r\n","const Icons = {\r\n  bomb: '💣',\r\n  mark: '❕',\r\n  helper: '❔',\r\n  exploded: '💥',\r\n}\r\n\r\nexport default Icons;","import React from 'react';\r\nimport Icons from \"./Icons\";\r\n\r\nimport './Square.css';\r\n\r\nexport default class Square extends React.Component {\r\n  handleContextMenu = e => {\r\n    e.preventDefault();\r\n  }\r\n\r\n  /* Нажатие ЛКМ и ПКМ одновременно используется для безопасного открытия ячеек.\r\n   * Разделение на onMouseDown и onMouseUp сделано для следующего:\r\n   * если была нажата одна из кнопок (1 - ЛКМ, 2 - ПКМ), то будет вызвано событие одной из этих кнопок,\r\n   * иначе будет считаться нажатие двух кнопок (3).\r\n   * Грубо говоря, игрок не проиграет, если даже случайно нажмет обе кнопки на клетку, где есть бомба. */\r\n\r\n  handleMouseDown = e => {\r\n    this._buttons = e.buttons;\r\n  }\r\n\r\n  handleMouseUp = e => {\r\n    if (!this._buttons) return;\r\n\r\n    switch (this._buttons) {\r\n      case 1:\r\n        this.props.onLeftClick(this.props);\r\n        break;\r\n      case 2:\r\n        this.props.onRightClick(this.props);\r\n        break;\r\n      case 3:\r\n        this.props.onBothClick(this.props);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this._buttons = null;\r\n  }\r\n\r\n  render() {\r\n    const className = ['square'];\r\n    let value = '';\r\n\r\n    if (this.props.isOpened) {\r\n      className.push('opened');\r\n\r\n      if (this.props.withBomb)\r\n        value = Icons.bomb;\r\n\r\n      if (this.props.nearBombsCount) {\r\n        value = this.props.nearBombsCount;\r\n        className.push('number');\r\n      }\r\n    } else {\r\n      if (this.props.isMarked)\r\n        value = Icons.mark;\r\n\r\n      if (this.props.isHelper)\r\n        value = Icons.helper;\r\n    }\r\n\r\n    return (\r\n      <div\r\n        className={className.join(' ')}\r\n        onContextMenu={this.handleContextMenu}\r\n        onMouseDown={this.handleMouseDown}\r\n        onMouseUp={this.handleMouseUp}\r\n      >\r\n        {value}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport Square from './Square';\r\n\r\nimport './Board.css';\r\n\r\nexport default class Board extends React.Component {\r\n  handleLeftClick = square => {\r\n    this.props.onLeftClick(square);\r\n  }\r\n\r\n  handleRightClick = square => {\r\n    this.props.onRightClick(square);\r\n  }\r\n\r\n  handleBothClick = square => {\r\n    this.props.onBothClick(square);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"board\">\r\n        {this.props.data.map((row, y) => (\r\n          <div key={y}>\r\n            {row.map((square, x) => (\r\n              <Square\r\n                key={x}\r\n                x={square.x}\r\n                y={square.y}\r\n                withBomb={square.withBomb}\r\n                nearBombsCount={square.nearBombsCount}\r\n                isOpened={square.isOpened}\r\n                isMarked={square.isMarked}\r\n                isHelper={square.isHelper}\r\n                onLeftClick={this.handleLeftClick}\r\n                onRightClick={this.handleRightClick}\r\n                onBothClick={this.handleBothClick}\r\n              />\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/**\r\n * @typedef BoardState Состояние поля\r\n * @property {number} x Координата X\r\n * @property {number} y Координата Y\r\n * @property {boolean} withBomb Ячейка с бомбой\r\n * @property {number} nearBombsCount Количество бомб рядом с ячейкой\r\n * @property {boolean} isOpened Ячейка открыта\r\n * @property {boolean} isMarked Ячейка помечена на возможное наличие бомбы\r\n * @property {boolean} isHelper\r\n */\r\n\r\n/**\r\n * Логика игры \"Сапер\"\r\n */\r\nexport default class Logic {\r\n  /**\r\n   * Сгенерировать начальное состояние поля\r\n   * @param {number} width Ширина поля\r\n   * @param {number} height Высота поля\r\n   * @param {number} bombsCount Количество бомб на поле\r\n   * @returns {BoardState[][]} Состояние поля\r\n   */\r\n  static initBoard(width, height, bombsCount) {\r\n    /* Расставляем бомбы. */\r\n\r\n    const bombs = [];\r\n    const isBomb = (x, y) => bombs.filter(bomb => bomb.x === x && bomb.y === y).length;\r\n\r\n    for (let i = 0; i < bombsCount; i++) {\r\n      const x = Math.floor(Math.random() * width);\r\n      const y = Math.floor(Math.random() * height);\r\n\r\n      if (isBomb(x, y))\r\n        i--;\r\n      else\r\n        bombs.push({ x, y });\r\n    }\r\n\r\n    /* Помечаем для каждой ячейки сколько рядом с ней находится бомб. */\r\n\r\n    const nearBombs = [];\r\n\r\n    for (let y = 0; y < height; y++) {\r\n      for (let x = 0; x < width; x++) {\r\n        if (isBomb(x, y)) continue;\r\n\r\n        let count = 0;\r\n\r\n        for (let dy = -1; dy <= 1; dy++)\r\n          for (let dx = -1; dx <= 1; dx++)\r\n            if (isBomb(x - dx, y - dy))\r\n              count++;\r\n\r\n        if (count)\r\n          nearBombs.push({ x, y, count });\r\n      }\r\n    }\r\n\r\n    /* Создаем поле. */\r\n\r\n    return Array(height).fill()\r\n      .map((_, y) => Array(width).fill()\r\n        .map((_, x) => {\r\n          const filtered = nearBombs.filter(cell => cell.x === x && cell.y === y);\r\n\r\n          return {\r\n            x, y,\r\n            withBomb: Boolean(isBomb(x, y)),\r\n            nearBombsCount: filtered.length ? filtered[0].count : 0,\r\n            isOpened: false,\r\n            isMarked: false,\r\n            isHelper: false,\r\n          };\r\n        })\r\n      );\r\n  }\r\n\r\n  /**\r\n   * Открыть ячейку и, по возможности, все остальные рядом с ней, если они пустые.\r\n   * @param {BoardState[][]} boardState Последнее состояние поля\r\n   * @param {BoardState} currSquare Выбранная ячейка\r\n   * @returns {BoardState[][]} Новое состояние поля\r\n   */\r\n  static openSquare(boardState, currSquare) {\r\n    const newBoardState = boardState.map(row => row.map(sqr => sqr));\r\n    const newCurrSquare = newBoardState[currSquare.y][currSquare.x];\r\n\r\n    openSquareRec(newBoardState, newCurrSquare);\r\n\r\n    if (newCurrSquare.isOpened && newCurrSquare.withBomb) {\r\n      newBoardState.forEach(row => row.forEach(square => square.isOpened = true));\r\n      alert('Ты проиграл.');\r\n    }\r\n\r\n    return newBoardState;\r\n  }\r\n\r\n  /**\r\n   * Поставить или снять метку на закрытую ячейку (\"!\" или \"?\").\r\n   * @param {BoardState[][]} boardState Последнее состояние поля\r\n   * @param {BoardState} currSquare Выбранная ячейка\r\n   * @returns {BoardState[][]} Новое состояние поля\r\n   */\r\n  static setMark(boardState, currSquare) {\r\n    if (currSquare.isOpened)\r\n      return boardState;\r\n\r\n    return boardState.map(row => (\r\n      row.map(square => {\r\n        if (!(square.x === currSquare.x && square.y === currSquare.y))\r\n          return square;\r\n\r\n        if (!square.isMarked && !square.isHelper)\r\n          square = { ...square, isMarked: true };\r\n        else if (square.isMarked && !square.isHelper)\r\n          square = { ...square, isMarked: false, isHelper: true };\r\n        else if (!square.isMarked && square.isHelper)\r\n          square = { ...square, isHelper: false };\r\n\r\n        return square;\r\n      })\r\n    ))\r\n  }\r\n\r\n  /**\r\n   * Открыть соседние ячейки, если среди них нет бомб.\r\n   * @param {BoardState[][]} boardState Последнее состояние поля\r\n   * @param {BoardState} currSquare Выбранная ячейка\r\n   * @returns {BoardState[][]} Новое состояние поля\r\n   */\r\n  static tryOpenNearSquares(boardState, currSquare) {\r\n    let isBombsNear = false; \r\n\r\n    doWithNearSquares(boardState, currSquare, square => {\r\n      if (isBombsNear) return;\r\n\r\n      if (square.isOpened || square.isMarked) return;\r\n\r\n      if (square.withBomb)\r\n        isBombsNear = true;\r\n    });\r\n\r\n    if (isBombsNear)\r\n      return boardState;\r\n\r\n    const newBoardState = boardState.map(row => row.map(sqr => sqr));\r\n\r\n    doWithNearSquares(newBoardState, currSquare, square => {\r\n      if (square.isOpened || square.isMarked) return;\r\n\r\n      square.isOpened = true;\r\n    });\r\n\r\n    return newBoardState;\r\n  }\r\n\r\n  /**\r\n   * Показать в консоли расположение бомб на поле.\r\n   * @param {BoardState[][]} boardState Состояние поля\r\n   */\r\n  static logBoard(boardState) {\r\n    console.log(\r\n      boardState.map(row => (\r\n        row.map(square => (\r\n          square.withBomb ? 'Q' : square.nearBombsCount ? square.nearBombsCount + '' : ' '\r\n        ))\r\n      ))\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * С помощью рекурсии открыть все пустые ячейки от выбранной до ячеек с количеством рядом находящихся бомб.\r\n * @param {BoardState[][]} boardState Состояние поля\r\n * @param {BoardState} currSquare Выбранная ячейка\r\n */\r\nfunction openSquareRec(boardState, currSquare) {\r\n  if (currSquare.isOpened || currSquare.isMarked)\r\n    return;\r\n\r\n  currSquare.isOpened = true;\r\n\r\n  if (currSquare.withBomb || currSquare.nearBombsCount)\r\n    return;\r\n\r\n  doWithNearSquares(boardState, currSquare, square => openSquareRec(boardState, square));\r\n};\r\n\r\n/**\r\n * @callback nearSquareCallback\r\n * @param {BoardState} square Выбранная ячейка\r\n */\r\n\r\n/**\r\n * Сделать что-то с ближайшими от выбранной ячейками \r\n * @param {BoardState[][]} boardState Состояние поля\r\n * @param {BoardState} currSquare Выбранная ячейка\r\n * @param {nearSquareCallback} callback Колбэк\r\n */\r\nfunction doWithNearSquares(boardState, currSquare, callback) {\r\n  const x = currSquare.x;\r\n  const y = currSquare.y;\r\n\r\n  for (let dy = -1; dy <= 1; dy++)\r\n    for (let dx = -1; dx <= 1; dx++) {\r\n      if (!(boardState[y + dy] && boardState[y + dy][x + dx])) continue;\r\n\r\n      const square = boardState[y + dy][x + dx];\r\n\r\n      if (!square) continue;\r\n      if (square.x === x && square.y === y) continue;\r\n\r\n      callback(square);\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Board from './Board';\r\n\r\nimport Logic from \"./Logic\";\r\n\r\nimport './Game.css';\r\n\r\nexport default class Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.state = {\r\n      board: Logic.initBoard(+this.props.width, +this.props.height, +this.props.bombsCount),\r\n    };\r\n\r\n    Logic.logBoard(this.state.board);\r\n  }\r\n\r\n  handleLeftClick = square => {\r\n    this.setState({\r\n      board: Logic.openSquare(this.state.board, square),\r\n    });\r\n  }\r\n\r\n  handleRightClick = square => {\r\n    this.setState({\r\n      board: Logic.setMark(this.state.board, square),\r\n    });\r\n  }\r\n\r\n  handleBothClick = square => {\r\n    this.setState({\r\n      board: Logic.tryOpenNearSquares(this.state.board, square),\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <Board\r\n          data={this.state.board}\r\n          onLeftClick={this.handleLeftClick}\r\n          onRightClick={this.handleRightClick}\r\n          onBothClick={this.handleBothClick}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import Hello from './Hello';\r\nimport Fox from './Fox';\r\nimport Mineswepper from './Mineswepper';\r\n\r\nconst pages = {\r\n  'Hello': Hello,\r\n  'Fox': Fox,\r\n  'Mineswepper': Mineswepper,\r\n};\r\n\r\nconst ids = Object.keys(pages);\r\n\r\nexport { pages, ids };\r\n","import React from 'react';\r\nimport Game from \"./Game\";\r\n\r\nexport default class Mineswepper extends React.Component {\r\n  render() {\r\n    return <Game width=\"9\" height=\"9\" bombsCount=\"10\"/>;\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { pages } from \"./pages\";\r\n\r\nexport default class Page extends React.Component {\r\n  render() {\r\n    const SomePage = pages[this.props.id];\r\n\r\n    if (!SomePage)\r\n      return null;\r\n\r\n    return <SomePage/>;\r\n  }\r\n}\r\n","import React from 'react';\r\nimport Menu from './Menu';\r\nimport Page from './Page';\r\nimport { ids } from \"./pages\";\r\n\r\nexport default class App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { id: '' };\r\n\r\n    this.handleMenuItemClick = this.handleMenuItemClick.bind(this);\r\n  }\r\n\r\n  handleMenuItemClick(id) {\r\n    if (this.state.id !== id)\r\n      this.setState({ id });\r\n  }\r\n\r\n  render() {\r\n    const id = this.state.id;\r\n\r\n    return (\r\n      <div>\r\n        <Menu ids={ids} onItemClick={this.handleMenuItemClick}/>\r\n        <Page id={id}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}