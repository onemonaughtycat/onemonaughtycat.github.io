{"version":3,"sources":["Menu.js","pages/Hello.js","pages/Fox.js","pages/Minesweeper/Status.js","pages/Minesweeper/Bar.js","pages/Minesweeper/Icons.js","pages/Minesweeper/Click.js","pages/Minesweeper/Square.js","pages/Minesweeper/Board.js","pages/Minesweeper/Logic.js","pages/Minesweeper/Game.js","pages/index.js","pages/Minesweeper/index.js","Page.js","App.js","index.js"],"names":["Menu","props","state","selected","handleClick","bind","e","i","target","parentNode","children","length","this","setState","onItemClick","outerText","ids","map","id","className","onClick","React","Component","Hello","Fox","Status","running","lose","win","Bar","width","height","bombsCount","expanded","handleRestartClick","onRestartClick","handleOptionsClick","handleInputChange","name","value","message","status","expandable","type","onChange","Icons","bomb","mark","helper","exploded","Click","openSquare","setMark","openNearSquares","Square","handleContextMenu","preventDefault","handleMouseDown","buttons","handleMouseUp","onSquareClick","isOpened","push","withBomb","nearBombsCount","isMarked","join","onContextMenu","onMouseDown","onMouseUp","Board","handleSquareClick","click","square","data","row","y","x","Logic","board","Array","fill","_","Math","floor","random","count","doWithNearSquares","sqr","logBoard","openSquareRec","forEach","closedCount","isBombsNear","isWin","console","log","String","callback","dy","dx","Game","initBoard","getStatus","pages","Object","keys","Page","SomePage","App","handleMenuItemClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c0bfc097.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Menu.css';\r\n\r\nexport default class Menu extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { selected: -1 };\r\n\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleClick(e) {\r\n    for (let i = 0; i < e.target.parentNode.children.length; i++)\r\n      if (e.target === e.target.parentNode.children[i])\r\n        this.setState({ selected: i });\r\n\r\n    this.props.onItemClick(e.target.outerText);\r\n  }\r\n\r\n  render() {\r\n    const ids = this.props.ids.map((id, i) => {\r\n      let className = 'system-menu-item';\r\n\r\n      if (i === this.state.selected)\r\n        className += ' selected';\r\n\r\n      return <li key={i} className={className} onClick={this.handleClick}>{id}</li>\r\n    });\r\n\r\n    return (\r\n      <div className=\"system-menu-wrapper\">\r\n        <ul className=\"system-menu-container\">{ids}</ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nexport default class Hello extends React.Component {\r\n  render() {\r\n    return <h1>Hello, world!</h1>;\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nexport default class Fox extends React.Component {\r\n  render() {\r\n    return <blockquote>The quick brown fox jump over a lazy dog.</blockquote>;\r\n  }\r\n}\r\n","/**\r\n * Статус игры\r\n * @readonly\r\n * @enum {number}\r\n */\r\nconst Status = {\r\n  running: 1,\r\n  lose: 2,\r\n  win: 3,\r\n}\r\n\r\nexport default Status;\r\n","import React from 'react';\r\n\r\nimport Status from './Status';\r\n\r\nimport './Bar.css';\r\n\r\nexport default class Bar extends React.Component {\r\n  state = {\r\n    width: \"9\",\r\n    height: \"9\",\r\n    bombsCount: \"10\",\r\n    expanded: false,\r\n  }\r\n\r\n  handleRestartClick = e => {\r\n    const { width, height, bombsCount } = this.state;\r\n    this.props.onRestartClick({ width, height, bombsCount });\r\n\r\n    this.setState({ expanded: false });\r\n  }\r\n\r\n  handleOptionsClick = e => {\r\n    this.setState({ expanded: !this.state.expanded });\r\n  }\r\n\r\n  handleInputChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  render() {\r\n    let message = '';\r\n\r\n    switch (this.props.status) {\r\n      case Status.win:\r\n        message = 'Победа!';\r\n        break;\r\n      case Status.lose:\r\n        message = 'Игра окончена';\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    const expandable = 'expandable' + (this.state.expanded ? ' open' : '')\r\n\r\n    return (\r\n      <div className=\"bar\">\r\n        <div className=\"main\">\r\n          <div className=\"main-item button\" onClick={this.handleRestartClick}>↻</div>\r\n          <div className=\"main-item message\">{message}</div>\r\n          <div className=\"main-item button expander\" onClick={this.handleOptionsClick}>⚙</div>\r\n        </div>\r\n        <div className={expandable}>\r\n          <label>Ширина поля</label>\r\n          <input type=\"text\" name=\"width\" value={this.state.width} onChange={this.handleInputChange}/>\r\n          <br/>\r\n          <label>Высота поля</label>\r\n          <input type=\"text\" name=\"height\" value={this.state.height} onChange={this.handleInputChange}/>\r\n          <br/>\r\n          <label>Количество бомб</label>\r\n          <input type=\"text\" name=\"bombsCount\" value={this.state.bombsCount} onChange={this.handleInputChange}/>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","const Icons = {\r\n  bomb: '💣',\r\n  mark: '❕',\r\n  helper: '❔',\r\n  exploded: '💥',\r\n}\r\n\r\nexport default Icons;","/**\r\n * Тип клика по ячейке\r\n * @readonly\r\n * @enum {number}\r\n */\r\nconst Click = {\r\n  openSquare: 1,\r\n  setMark: 2,\r\n  openNearSquares: 3,\r\n}\r\n\r\nexport default Click;\r\n","import React from 'react';\r\nimport Icons from './Icons';\r\nimport Click from './Click';\r\n\r\nimport './Square.css';\r\n\r\nexport default class Square extends React.Component {\r\n  handleContextMenu = e => {\r\n    e.preventDefault();\r\n  }\r\n\r\n  /* Нажатие ЛКМ и ПКМ одновременно используется для безопасного открытия ячеек.\r\n   * Разделение на onMouseDown и onMouseUp сделано для следующего:\r\n   * если была нажата одна из кнопок (1 - ЛКМ, 2 - ПКМ), то будет вызвано событие одной из этих кнопок,\r\n   * иначе будет считаться нажатие двух кнопок (3).\r\n   * Грубо говоря, игрок не проиграет, если даже случайно нажмет обе кнопки на клетку, где есть бомба. */\r\n\r\n  handleMouseDown = e => {\r\n    this.buttons = e.buttons;\r\n  }\r\n\r\n  handleMouseUp = e => {\r\n    if (!this.buttons) return;\r\n\r\n    switch (this.buttons) {\r\n      case 1:\r\n        this.props.onSquareClick(Click.openSquare, this.props);\r\n        break;\r\n      case 2:\r\n        this.props.onSquareClick(Click.setMark, this.props);\r\n        break;\r\n      case 3:\r\n        this.props.onSquareClick(Click.openNearSquares, this.props);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.buttons = null;\r\n  }\r\n\r\n  render() {\r\n    const className = ['square'];\r\n    let value = '';\r\n\r\n    if (this.props.isOpened) {\r\n      className.push('opened');\r\n\r\n      if (this.props.withBomb)\r\n        value = Icons.bomb;\r\n\r\n      if (this.props.nearBombsCount)\r\n        value = this.props.nearBombsCount;\r\n    } else {\r\n      if (this.props.isMarked)\r\n        value = Icons.mark;\r\n    }\r\n\r\n    return (\r\n      <div\r\n        className={className.join(' ')}\r\n        onContextMenu={this.handleContextMenu}\r\n        onMouseDown={this.handleMouseDown}\r\n        onMouseUp={this.handleMouseUp}\r\n      >\r\n        <div className=\"value\">\r\n          {value}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport Square from './Square';\r\n\r\nimport './Board.css';\r\n\r\nexport default class Board extends React.Component {\r\n  handleSquareClick = (click, square) => {\r\n    this.props.onSquareClick(click, square);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"board\">\r\n        {this.props.data.map((row, y) => (\r\n          <div key={y} className=\"row\">\r\n            {row.map((square, x) => (\r\n              <Square\r\n                key={x}\r\n                x={square.x}\r\n                y={square.y}\r\n                withBomb={square.withBomb}\r\n                nearBombsCount={square.nearBombsCount}\r\n                isOpened={square.isOpened}\r\n                isMarked={square.isMarked}\r\n                onSquareClick={this.handleSquareClick}\r\n              />\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import Status from \"./Status\";\r\n\r\n/**\r\n * @typedef Square Ячейка\r\n * @property {number} x Координата X\r\n * @property {number} y Координата Y\r\n * @property {boolean} withBomb Есть бомба\r\n * @property {number} nearBombsCount Сколько рядом бомб\r\n * @property {boolean} isOpened Открыта ли\r\n * @property {boolean} isMarked Помечена ли\r\n */\r\n\r\n/**\r\n * Логика игры \"Сапер\"\r\n */\r\nexport default class Logic {\r\n  /**\r\n   * Создать новое поле и сгенерировать бомбы на ней\r\n   * @param {number} width Ширина\r\n   * @param {number} height Высота\r\n   * @param {number} bombsCount Количество бомб\r\n   * @returns {Square[][]} Поле\r\n   */\r\n  static initBoard(width, height, bombsCount) {\r\n    const board = Array(+height).fill()\r\n      .map((_, y) => Array(+width).fill()\r\n        .map((_, x) => ({\r\n          x, y,\r\n          withBomb: false,\r\n          nearBombsCount: 0,\r\n          isOpened: false,\r\n          isMarked: false,\r\n          })\r\n        )\r\n      )\r\n\r\n    for (let i = 0; i < +bombsCount; i++) {\r\n      const x = Math.floor(Math.random() * width);\r\n      const y = Math.floor(Math.random() * height);\r\n\r\n      if (!board[y][x].withBomb)\r\n        board[y][x].withBomb = true;\r\n      else\r\n        i--;\r\n    }\r\n\r\n    for (const row of board) {\r\n      for (const square of row) {\r\n        if (square.withBomb)\r\n          continue;\r\n\r\n        let count = 0;\r\n\r\n        doWithNearSquares(board, square, sqr => {\r\n          if (sqr.withBomb)\r\n            count++;\r\n        })\r\n\r\n        if (count)\r\n          square.nearBombsCount = count;\r\n      }\r\n    }\r\n\r\n    Logic.logBoard(board);\r\n\r\n    return board;\r\n  }\r\n\r\n  /**\r\n   * Открыть ячейку и, по возможности,\r\n   * все остальные рядом с ней, если они пустые.\r\n   * @param {Square[][]} board Поле\r\n   * @param {Square} square Выбранная ячейка\r\n   * @returns {Square[][] | null} Новое поле\r\n   */\r\n  static openSquare(board, square) {\r\n    if (square.isOpened)\r\n      return null;\r\n\r\n    board = board.map(row => row.map(sqr => sqr));\r\n    square = board[square.y][square.x];\r\n\r\n    openSquareRec(board, square);\r\n\r\n    if (square.isOpened && square.withBomb)\r\n      board.forEach(row => row.forEach(sqr => sqr.isOpened = true));\r\n\r\n    return board;\r\n  }\r\n\r\n  /**\r\n   * Поставить или снять метку на закрытую ячейку.\r\n   * @param {Square[][]} board Поле\r\n   * @param {Square} square Выбранная ячейка\r\n   * @returns {Square[][] | null} Новое поле\r\n   */\r\n  static setMark(board, square) {\r\n    if (square.isOpened)\r\n      return null;\r\n\r\n    board = board.map(row => row.map(sqr => sqr));\r\n    square = board[square.y][square.x];\r\n\r\n    square.isMarked = !square.isMarked;\r\n\r\n    return board;\r\n  }\r\n\r\n  /**\r\n   * Открыть соседние ячейки, если среди них нет бомб.\r\n   * @param {Square[][]} board Поле\r\n   * @param {Square} square Выбранная ячейка\r\n   * @returns {Square[][] | null} Новое поле\r\n   */\r\n  static openNearSquares(board, square) {\r\n    let closedCount = 0;\r\n    let isBombsNear = false; \r\n\r\n    doWithNearSquares(board, square, sqr => {\r\n      if (!sqr.isOpened && !sqr.isMarked)\r\n        closedCount++;\r\n      else\r\n        return;\r\n\r\n      if (sqr.withBomb)\r\n        isBombsNear = true;\r\n    });\r\n\r\n    if (!closedCount || isBombsNear)\r\n      return null;\r\n\r\n    board = board.map(row => row.map(sqr => sqr));\r\n\r\n    doWithNearSquares(board, square, sqr => {\r\n      if (!sqr.isOpened && !sqr.isMarked)\r\n        openSquareRec(board, sqr);\r\n    });\r\n\r\n    return board;\r\n  }\r\n\r\n  /**\r\n   * Получить статус игры\r\n   * @param {Square[][]} board Поле\r\n   * @param {Square} square Выбранная ячейка\r\n   * @returns {Status} Статус игры\r\n   */\r\n  static getStatus(board, square) {\r\n    let isWin = true;\r\n\r\n    for (const row of board) {\r\n      for (const square of row) {\r\n        if (!square.isOpened && !square.withBomb)\r\n          isWin = false;\r\n      }\r\n\r\n      if (!isWin)\r\n        break;\r\n    }\r\n\r\n    const isLose = square.isOpened && square.withBomb;\r\n\r\n    return (\r\n      isLose ? Status.lose :\r\n      isWin  ? Status.win  :\r\n      Status.running\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Показать в консоли расположение бомб на поле.\r\n   * @param {Square[][]} board Поле\r\n   */\r\n  static logBoard(board) {\r\n    console.log(\r\n      board.map(row => (\r\n        row.map(square => {\r\n          if (square.withBomb)\r\n            return 'Q';\r\n\r\n          if (square.nearBombsCount)\r\n            return String(square.nearBombsCount);\r\n\r\n          return ' ';\r\n        })\r\n      ))\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * С помощью рекурсии открыть все пустые ячейки\r\n * от выбранной до ячеек с количеством рядом находящихся бомб.\r\n * @param {Square[][]} board Поле\r\n * @param {Square} square Выбранная ячейка\r\n */\r\nfunction openSquareRec(board, square) {\r\n  if (square.isOpened || square.isMarked)\r\n    return;\r\n\r\n  square.isOpened = true;\r\n\r\n  if (square.withBomb || square.nearBombsCount)\r\n    return;\r\n\r\n  doWithNearSquares(board, square, sqr => (\r\n    openSquareRec(board, sqr)\r\n  ));\r\n};\r\n\r\n/**\r\n * @callback NearSquareCallback\r\n * @param {Square} square Выбранная ячейка\r\n */\r\n\r\n/**\r\n * Сделать что-то с ближайшими от выбранной ячейками \r\n * @param {Square[][]} board Поле\r\n * @param {Square} square Выбранная ячейка\r\n * @param {NearSquareCallback} callback Колбэк\r\n */\r\nfunction doWithNearSquares(board, square, callback) {\r\n  const { x, y } = square;\r\n\r\n  for (let dy = -1; dy <= 1; dy++) {\r\n    for (let dx = -1; dx <= 1; dx++) {\r\n      if (!(board[y + dy] && board[y + dy][x + dx]))\r\n        continue;\r\n\r\n      const sqr = board[y + dy][x + dx];\r\n\r\n      if (sqr.x === x && sqr.y === y)\r\n        continue;\r\n\r\n      callback(sqr);\r\n    }\r\n  }\r\n}\r\n","import React from 'react';\r\nimport Bar from './Bar';\r\nimport Board from './Board';\r\n\r\nimport Logic from './Logic';\r\nimport Click from './Click';\r\nimport Status from './Status';\r\n\r\nimport './Game.css';\r\n\r\nexport default class Game extends React.Component {\r\n  state = {\r\n    board: Logic.initBoard(9, 9, 10),\r\n    status: Status.running,\r\n  };\r\n\r\n  handleRestartClick = ({ width, height, bombsCount }) => {\r\n    this.setState({\r\n      board: Logic.initBoard(width, height, bombsCount),\r\n      status: Status.running,\r\n    });\r\n  }\r\n\r\n  handleSquareClick = (click, square) => {\r\n    if (this.state.status !== Status.running) return;\r\n\r\n    let board;\r\n\r\n    switch (click) {\r\n      case Click.openSquare:\r\n        board = Logic.openSquare(this.state.board, square)\r\n        break;\r\n      case Click.setMark:\r\n        board = Logic.setMark(this.state.board, square)\r\n        break;\r\n      case Click.openNearSquares:\r\n        board = Logic.openNearSquares(this.state.board, square)\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    if (!board) return;\r\n\r\n    const status = Logic.getStatus(board, board[square.y][square.x]);\r\n\r\n    this.setState({ board, status });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <Bar status={this.state.status} onRestartClick={this.handleRestartClick}/>\r\n        <Board data={this.state.board} onSquareClick={this.handleSquareClick}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import Hello from './Hello';\r\nimport Fox from './Fox';\r\nimport Minesweeper from './Minesweeper';\r\n\r\nconst pages = {\r\n  'Hello': Hello,\r\n  'Fox': Fox,\r\n  'Minesweeper': Minesweeper,\r\n};\r\n\r\nconst ids = Object.keys(pages);\r\n\r\nexport { pages, ids };\r\n","import React from 'react';\r\nimport Game from \"./Game\";\r\n\r\nexport default class Minesweeper extends React.Component {\r\n  render() {\r\n    return <Game width=\"9\" height=\"9\" bombsCount=\"10\"/>;\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { pages } from \"./pages\";\r\n\r\nexport default class Page extends React.Component {\r\n  render() {\r\n    const SomePage = pages[this.props.id];\r\n\r\n    if (!SomePage)\r\n      return null;\r\n\r\n    return <SomePage/>;\r\n  }\r\n}\r\n","import React from 'react';\r\nimport Menu from './Menu';\r\nimport Page from './Page';\r\nimport { ids } from \"./pages\";\r\n\r\nexport default class App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { id: '' };\r\n\r\n    this.handleMenuItemClick = this.handleMenuItemClick.bind(this);\r\n  }\r\n\r\n  handleMenuItemClick(id) {\r\n    if (this.state.id !== id)\r\n      this.setState({ id });\r\n  }\r\n\r\n  render() {\r\n    const id = this.state.id;\r\n\r\n    return (\r\n      <div>\r\n        <Menu ids={ids} onItemClick={this.handleMenuItemClick}/>\r\n        <Page id={id}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}